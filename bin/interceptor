#! /usr/bin/env node
/*!
 * bin/interceptor 
 * Copyright(c) 2012 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */
var readline = require('readline');
var interceptor = require('../');
var optimist = require('optimist');
var argv = optimist
    .usage('interceptor -t 127.0.0.1:6379 -p 6380 -d 100')
    .demand(['t', 'p'])
    .options({
      t: {
        alias: 'target',
        describe: '代理的目标服务器地址: 127.0.0.1:6379'
      },
      p: {
        alias: 'port',
        describe: '代理监听的本地端口: 8888'
      },
      d: {
        alias: 'delay',
        describe: '模拟目标服务器延迟，单位为ms: 100'
      }
    })
    .argv;

var target = argv.t;
var port = argv.p;
var delay = parseInt(argv.d, 10) || 0;
if (!target || !port || target.split(':').length !== 2) {
  return optimist.showHelp();
}

var proxy = interceptor.create(target, delay);

proxy.listen(port, function () {
  var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });

  console.log('Now you can input command to control this interceptor proxy:\
    \nb block:  block the network\no open :  open the network\ne exit :  exit the process');

  rl.on('line', function (cmd) {
    switch (cmd.trim()) {
      case 'b':
      case 'block': 
        proxy.block();
        console.log('network is blocked');
        break;
      case 'o':
      case 'open':
        proxy.open();
        console.log('network is open');
        break;
      case 'e':
      case 'exit':
        process.exit(0); break;
      default: 
        console.log('only accept `b` & `blcok` for block and `o` & `open` for open');
      }
  })
});

